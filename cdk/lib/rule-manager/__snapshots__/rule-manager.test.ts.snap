// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The rule manager stack matches the snapshot 1`] = `
Object {
  "Mappings": Object {
    "stagemapping": Object {
      "CODE": Object {
        "domainName": "typerighter.code.dev-gutools.co.uk",
        "maxInstances": 2,
        "minInstances": 1,
      },
      "PROD": Object {
        "domainName": "typerighter.gutools.co.uk",
        "maxInstances": 6,
        "minInstances": 3,
      },
    },
  },
  "Outputs": Object {
    "LoadBalancerTyperighterrulemanagerDnsName": Object {
      "Description": "DNS entry for LoadBalancerTyperighterrulemanager",
      "Value": Object {
        "Fn::GetAtt": Array [
          "LoadBalancerTyperighterrulemanager088CCBBF",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": Object {
    "AMITyperighterrulemanager": Object {
      "Description": "Amazon Machine Image ID for the app typerighter-rule-manager. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "DistributionBucketName": Object {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "InstanceTypeTyperighterrulemanager": Object {
      "Default": "t3.small",
      "Description": "EC2 Instance Type for the app typerighter-rule-manager",
      "Type": "String",
    },
    "LoggingStreamName": Object {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "Stage": Object {
      "AllowedValues": Array [
        "CODE",
        "PROD",
      ],
      "Default": "CODE",
      "Description": "Stage name",
      "Type": "String",
    },
    "VpcId": Object {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
    "typerighterrulemanagerPrivateSubnets": Object {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "typerighterrulemanagerPublicSubnets": Object {
      "Default": "/account/vpc/primary/subnets/public",
      "Description": "A list of public subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
  },
  "Resources": Object {
    "ApplicationSecurityGroupTyperighterrulemanagerB7623A9C": Object {
      "Properties": Object {
        "GroupDescription": "Application security group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allows application EC2 instance to access postgres DB",
            "FromPort": 5432,
            "IpProtocol": "tcp",
            "ToPort": 5432,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          Object {
            "Key": "Stack",
            "Value": "flexible",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AutoScalingGroupTyperighterrulemanagerASG7B90BF61": Object {
      "Properties": Object {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupTyperighterrulemanagerLaunchConfig5311DECE",
        },
        "MaxSize": Object {
          "Fn::FindInMap": Array [
            "stagemapping",
            Object {
              "Ref": "Stage",
            },
            "maxInstances",
          ],
        },
        "MinSize": Object {
          "Fn::FindInMap": Array [
            "stagemapping",
            Object {
              "Ref": "Stage",
            },
            "minInstances",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "typerighter-rule-manager",
          },
          Object {
            "Key": "gu:cdk:pattern-name",
            "PropagateAtLaunch": true,
            "Value": "GuPlayApp",
          },
          Object {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/typerighter",
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "rule-manager/AutoScalingGroupTyperighterrulemanager",
          },
          Object {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "flexible",
          },
          Object {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "TargetGroupARNs": Array [
          Object {
            "Ref": "TargetGroupTyperighterrulemanager5D2DA3B8",
          },
        ],
        "VPCZoneIdentifier": Object {
          "Ref": "typerighterrulemanagerPrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "AutoScalingGroupTyperighterrulemanagerInstanceProfile4E294BC2": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupTyperighterrulemanagerLaunchConfig5311DECE": Object {
      "DependsOn": Array [
        "InstanceRoleTyperighterrulemanagerC4CF9347",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupTyperighterrulemanagerInstanceProfile4E294BC2",
        },
        "ImageId": Object {
          "Ref": "AMITyperighterrulemanager",
        },
        "InstanceType": Object {
          "Ref": "InstanceTypeTyperighterrulemanager",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "GuHttpsEgressSecurityGroupTyperighterrulemanagerD8331A62",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "WazuhSecurityGroup",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "ApplicationSecurityGroupTyperighterrulemanagerB7623A9C",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Join": Array [
              "",
              Array [
                "#!/bin/bash -ev
        aws --quiet --region ",
                Object {
                  "Ref": "AWS::Region",
                },
                " s3 cp s3://composer-dist/flexible/",
                Object {
                  "Ref": "Stage",
                },
                "/typerighter-rule-manager/typerighter-rule-manager.deb /tmp/package.deb
        dpkg -i /tmp/package.deb",
              ],
            ],
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "CertificateTyperighterrulemanager994D3BCE": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "DomainName": Object {
          "Fn::FindInMap": Array [
            "stagemapping",
            Object {
              "Ref": "Stage",
            },
            "domainName",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          Object {
            "Key": "Stack",
            "Value": "flexible",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "DescribeEC2PolicyFF5F9295": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyTyperighterrulemanagerBAFF784F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:s3:::",
                    Object {
                      "Ref": "DistributionBucketName",
                    },
                    "/flexible/",
                    Object {
                      "Ref": "Stage",
                    },
                    "/typerighter-rule-manager/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyTyperighterrulemanagerBAFF784F",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupTyperighterrulemanagerD8331A62": Object {
      "Properties": Object {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          Object {
            "Key": "Stack",
            "Value": "flexible",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupTyperighterrulemanagerfromrulemanagerLoadBalancerTyperighterrulemanagerSecurityGroup77F731E29000BBA9DAA8": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupTyperighterrulemanagerD8331A62",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerTyperighterrulemanagerSecurityGroupA732DDB7",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:kinesis:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    Object {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InstanceRoleTyperighterrulemanagerC4CF9347": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          Object {
            "Key": "Stack",
            "Value": "flexible",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ListenerTyperighterrulemanagerC0F0EE62": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": Object {
              "Ref": "CertificateTyperighterrulemanager994D3BCE",
            },
          },
        ],
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "TargetGroupTyperighterrulemanager5D2DA3B8",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LoadBalancerTyperighterrulemanager088CCBBF",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerTyperighterrulemanager088CCBBF": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LoadBalancerTyperighterrulemanagerSecurityGroupA732DDB7",
              "GroupId",
            ],
          },
        ],
        "Subnets": Object {
          "Ref": "typerighterrulemanagerPublicSubnets",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          Object {
            "Key": "Stack",
            "Value": "flexible",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerTyperighterrulemanagerSecurityGroupA732DDB7": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB rulemanagerLoadBalancerTyperighterrulemanagerA16BB8BE",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          Object {
            "Key": "Stack",
            "Value": "flexible",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerTyperighterrulemanagerSecurityGrouptorulemanagerGuHttpsEgressSecurityGroupTyperighterrulemanagerCD7245169000F16E780D": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupTyperighterrulemanagerD8331A62",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerTyperighterrulemanagerSecurityGroupA732DDB7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "PandaAuthPolicy4E029301": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::pan-domain-auth-settings/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PandaAuthPolicy4E029301",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ParameterStoreReadTyperighterrulemanager4551E15C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/",
                    Object {
                      "Ref": "Stage",
                    },
                    "/flexible/typerighter-rule-manager",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SSMRunCommandPolicy244E1613": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-run-command-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupTyperighterrulemanager5D2DA3B8": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          Object {
            "Key": "Stack",
            "Value": "flexible",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "WazuhSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          Object {
            "Key": "Stack",
            "Value": "flexible",
          },
          Object {
            "Key": "Stage",
            "Value": Object {
              "Ref": "Stage",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
}
`;
