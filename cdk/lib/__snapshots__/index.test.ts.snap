// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The typerighter stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuParameter",
      "GuArnParameter",
      "GuGetS3ObjectsPolicy",
      "GuGetS3ObjectsPolicy",
      "GuPutCloudwatchMetricsPolicy",
      "GuVpcParameter",
      "GuSubnetListParameter",
      "GuSubnetListParameter",
      "GuPlayApp",
      "GuCertificate",
      "GuInstanceRole",
      "GuSsmSshPolicy",
      "GuDescribeEC2Policy",
      "GuLoggingStreamNameParameter",
      "GuLogShippingPolicy",
      "GuDistributionBucketParameter",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuAmiParameter",
      "GuHttpsEgressSecurityGroup",
      "GuWazuhAccess",
      "GuAutoScalingGroup",
      "GuApplicationLoadBalancer",
      "GuApplicationTargetGroup",
      "GuHttpsApplicationListener",
      "GuSubnetListParameter",
      "GuSubnetListParameter",
      "GuPlayApp",
      "GuCertificate",
      "GuInstanceRole",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuAmiParameter",
      "GuHttpsEgressSecurityGroup",
      "GuAutoScalingGroup",
      "GuApplicationLoadBalancer",
      "GuApplicationTargetGroup",
      "GuHttpsApplicationListener",
      "GuDnsRecordSet",
      "GuS3Bucket",
      "GuS3Bucket",
      "GuDnsRecordSet",
      "GuSecurityGroup",
      "GuSubnetListParameter",
      "GuDatabaseInstance",
      "GuApiLambda",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "LoadBalancerTyperightercheckerDnsName": {
      "Description": "DNS entry for LoadBalancerTyperighterchecker",
      "Value": {
        "Fn::GetAtt": [
          "LoadBalancerTyperighterchecker8B160CE2",
          "DNSName",
        ],
      },
    },
    "LoadBalancerTyperighterrulemanagerDnsName": {
      "Description": "DNS entry for LoadBalancerTyperighterrulemanager",
      "Value": {
        "Fn::GetAtt": [
          "LoadBalancerTyperighterrulemanager088CCBBF",
          "DNSName",
        ],
      },
    },
    "typerighteruserfeedbacklambdatyperighteruserfeedbackapiEndpoint5D1F2A62": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapiDeploymentStageprod397C05AA",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "AMITyperighterchecker": {
      "Description": "Amazon Machine Image ID for the app typerighter-checker. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "AMITyperighterrulemanager": {
      "Description": "Amazon Machine Image ID for the app typerighter-rule-manager. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "CheckerCloudfrontCertificate": {
      "AllowedPattern": "arn:aws:[a-z0-9]*:[a-z0-9\\-]*:[0-9]{12}:.*",
      "ConstraintDescription": "Must be a valid ARN, eg: arn:partition:service:region:account-id:resource-id",
      "Description": "The ARN of the certificate for the checker service Cloudfront distribution",
      "Type": "String",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "MasterDBUsername": {
      "Default": "rule_manager",
      "Description": "Master DB username",
      "Type": "String",
    },
    "PrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "VpcId": {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
    "typerightercheckerPrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "typerightercheckerPublicSubnets": {
      "Default": "/account/vpc/primary/subnets/public",
      "Description": "A list of public subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "typerighterrulemanagerPrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "typerighterrulemanagerPublicSubnets": {
      "Default": "/account/vpc/primary/subnets/public",
      "Description": "A list of public subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
  },
  "Resources": {
    "AutoScalingGroupTyperightercheckerASG10DD2261": {
      "Properties": {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "flexibleTESTtyperightercheckerC54CB6AC",
          },
          "Version": {
            "Fn::GetAtt": [
              "flexibleTESTtyperightercheckerC54CB6AC",
              "LatestVersionNumber",
            ],
          },
        },
        "MaxSize": "2",
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupTotalInstances",
              "GroupInServiceInstances",
            ],
          },
        ],
        "MinSize": "1",
        "Tags": [
          {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "typerighter-checker",
          },
          {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/typerighter",
          },
          {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "LoggingStreamName",
            },
          },
          {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "typerighter-checker.service",
          },
        ],
        "TargetGroupARNs": [
          {
            "Ref": "TargetGroupTyperighterchecker7E7859CF",
          },
        ],
        "VPCZoneIdentifier": {
          "Ref": "typerightercheckerPrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "AutoScalingGroupTyperighterrulemanagerASG7B90BF61": {
      "Properties": {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "flexibleTESTtyperighterrulemanager4AFD32A8",
          },
          "Version": {
            "Fn::GetAtt": [
              "flexibleTESTtyperighterrulemanager4AFD32A8",
              "LatestVersionNumber",
            ],
          },
        },
        "MaxSize": "2",
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupTotalInstances",
              "GroupInServiceInstances",
            ],
          },
        ],
        "MinSize": "1",
        "Tags": [
          {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "typerighter-rule-manager",
          },
          {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/typerighter",
          },
          {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "LoggingStreamName",
            },
          },
          {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "typerighter-rule-manager.service",
          },
        ],
        "TargetGroupARNs": [
          {
            "Ref": "TargetGroupTyperighterrulemanager5D2DA3B8",
          },
        ],
        "VPCZoneIdentifier": {
          "Ref": "typerighterrulemanagerPrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "CertificateTyperighterchecker335D464A": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "DomainName": "checker.test.dev-gutools.co.uk",
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-checker",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Name",
            "Value": "typerighter/CertificateTyperighterchecker",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "CertificateTyperighterrulemanager994D3BCE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "DomainName": "manager.test.dev-gutools.co.uk",
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Name",
            "Value": "typerighter/CertificateTyperighterrulemanager",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "DBSecurityGroupTyperighterrulemanagerE0229216": {
      "Properties": {
        "GroupDescription": "Allow traffic from EC2 instances to DB",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DBSecurityGroupTyperighterrulemanagerfromtyperighterGuHttpsEgressSecurityGroupTyperighterrulemanagerCA981E9E5432D4DEAF98": {
      "Properties": {
        "Description": "Allow connection from EC2 instances to DB",
        "FromPort": 5432,
        "GroupId": {
          "Fn::GetAtt": [
            "DBSecurityGroupTyperighterrulemanagerE0229216",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupTyperighterrulemanagerD8331A62",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DBSecurityGroupTyperighterrulemanagerfromtyperighterWazuhSecurityGroupF941BA2354320D59DB78": {
      "Properties": {
        "Description": "Allow connection from EC2 instances to DB",
        "FromPort": 5432,
        "GroupId": {
          "Fn::GetAtt": [
            "DBSecurityGroupTyperighterrulemanagerE0229216",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DBSubnetGroup": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnet for typerighter rule-manager database",
        "SubnetIds": {
          "Ref": "PrivateSubnets",
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "DescribeEC2PolicyFF5F9295": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleTyperightercheckerEA6224AC",
          },
          {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyTyperighterchecker445A87C9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "DistributionBucketName",
                    },
                    "/flexible/TEST/typerighter-checker/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyTyperighterchecker445A87C9",
        "Roles": [
          {
            "Ref": "InstanceRoleTyperightercheckerEA6224AC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyTyperighterrulemanagerBAFF784F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "DistributionBucketName",
                    },
                    "/flexible/TEST/typerighter-rule-manager/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyTyperighterrulemanagerBAFF784F",
        "Roles": [
          {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupTyperighterchecker43707E0C": {
      "Properties": {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-checker",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupTyperightercheckerfromtyperighterLoadBalancerTyperightercheckerSecurityGroup6083F06D9000ABA04AA0": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupTyperighterchecker43707E0C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerTyperightercheckerSecurityGroup35C23EF5",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuHttpsEgressSecurityGroupTyperighterrulemanagerD8331A62": {
      "Properties": {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupTyperighterrulemanagerfromtyperighterLoadBalancerTyperighterrulemanagerSecurityGroupCB1A584E90002DD508E0": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupTyperighterrulemanagerD8331A62",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerTyperighterrulemanagerSecurityGroupA732DDB7",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuHttpsEgressSecurityGroupTyperighterrulemanagertotyperighterDBSecurityGroupTyperighterrulemanager6085BB9A54322207D96A": {
      "Properties": {
        "Description": "Allow connection from EC2 instances to DB",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "DBSecurityGroupTyperighterrulemanagerE0229216",
            "GroupId",
          ],
        },
        "FromPort": 5432,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupTyperighterrulemanagerD8331A62",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "GuLogShippingPolicy981BFE5A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": [
          {
            "Ref": "InstanceRoleTyperightercheckerEA6224AC",
          },
          {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuPutCloudwatchMetricsPolicyC5BCE402": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuPutCloudwatchMetricsPolicyC5BCE402",
        "Roles": [
          {
            "Ref": "InstanceRoleTyperightercheckerEA6224AC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InstanceRoleTyperightercheckerDefaultPolicyAC356146": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "typerighterbucketTyperighterrulemanager54EC2AB2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "typerighterbucketTyperighterrulemanager54EC2AB2",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "hmacSecretF1CD03D9",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "InstanceRoleTyperightercheckerDefaultPolicyAC356146",
        "Roles": [
          {
            "Ref": "InstanceRoleTyperightercheckerEA6224AC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InstanceRoleTyperightercheckerEA6224AC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-checker",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InstanceRoleTyperighterrulemanagerC4CF9347": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InstanceRoleTyperighterrulemanagerDefaultPolicy29F250C4": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "typerighterbucketTyperighterrulemanager54EC2AB2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "typerighterbucketTyperighterrulemanager54EC2AB2",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "hmacSecretF1CD03D9",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "InstanceRoleTyperighterrulemanagerDefaultPolicy29F250C4",
        "Roles": [
          {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ListenerTyperighterchecker1700E874": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Ref": "CertificateTyperighterchecker335D464A",
            },
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroupTyperighterchecker7E7859CF",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancerTyperighterchecker8B160CE2",
        },
        "Port": 443,
        "Protocol": "HTTPS",
        "SslPolicy": "ELBSecurityPolicy-TLS13-1-2-2021-06",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ListenerTyperighterrulemanagerC0F0EE62": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Ref": "CertificateTyperighterrulemanager994D3BCE",
            },
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroupTyperighterrulemanager5D2DA3B8",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancerTyperighterrulemanager088CCBBF",
        },
        "Port": 443,
        "Protocol": "HTTPS",
        "SslPolicy": "ELBSecurityPolicy-TLS13-1-2-2021-06",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerTyperighterchecker8B160CE2": {
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
          {
            "Key": "routing.http.x_amzn_tls_version_and_cipher_suite.enabled",
            "Value": "true",
          },
          {
            "Key": "routing.http.drop_invalid_header_fields.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LoadBalancerTyperightercheckerSecurityGroup35C23EF5",
              "GroupId",
            ],
          },
        ],
        "Subnets": {
          "Ref": "typerightercheckerPublicSubnets",
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-checker",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerTyperightercheckerSecurityGroup35C23EF5": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB typerighterLoadBalancerTyperighterchecker410072D0",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-checker",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerTyperightercheckerSecurityGrouptotyperighterGuHttpsEgressSecurityGroupTyperightercheckerE1FE725890008BE3EB99": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupTyperighterchecker43707E0C",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerTyperightercheckerSecurityGroup35C23EF5",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LoadBalancerTyperightercheckerSecurityGrouptotyperighterWazuhSecurityGroupF941BA2390008F674D0B": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerTyperightercheckerSecurityGroup35C23EF5",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LoadBalancerTyperighterrulemanager088CCBBF": {
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
          {
            "Key": "routing.http.x_amzn_tls_version_and_cipher_suite.enabled",
            "Value": "true",
          },
          {
            "Key": "routing.http.drop_invalid_header_fields.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LoadBalancerTyperighterrulemanagerSecurityGroupA732DDB7",
              "GroupId",
            ],
          },
        ],
        "Subnets": {
          "Ref": "typerighterrulemanagerPublicSubnets",
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerTyperighterrulemanagerSecurityGroupA732DDB7": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB typerighterLoadBalancerTyperighterrulemanager83A799C9",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerTyperighterrulemanagerSecurityGrouptotyperighterGuHttpsEgressSecurityGroupTyperighterrulemanagerCA981E9E900057E9DB49": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupTyperighterrulemanagerD8331A62",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerTyperighterrulemanagerSecurityGroupA732DDB7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LoadBalancerTyperighterrulemanagerSecurityGrouptotyperighterWazuhSecurityGroupF941BA23900016F56539": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerTyperighterrulemanagerSecurityGroupA732DDB7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "PandaAuthPolicy4E029301": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::pan-domain-auth-settings/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PandaAuthPolicy4E029301",
        "Roles": [
          {
            "Ref": "InstanceRoleTyperightercheckerEA6224AC",
          },
          {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ParameterStoreReadTyperighterchecker6F76A0F7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/flexible/typerighter-checker",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/flexible/typerighter-checker/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleTyperightercheckerEA6224AC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ParameterStoreReadTyperighterrulemanager4551E15C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/flexible/typerighter-rule-manager",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/flexible/typerighter-rule-manager/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PermissionsPolicy9C13C9BA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::permissions-cache/TEST/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PermissionsPolicy9C13C9BA",
        "Roles": [
          {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RuleManagerRDSRulemanagerdb67FB0AF4": {
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "AllocatedStorage": "50",
        "AllowMajorVersionUpgrade": false,
        "AutoMinorVersionUpgrade": true,
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t4g.micro",
        "DBInstanceIdentifier": "typerighter-rule-manager-store-test",
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup",
        },
        "DeleteAutomatedBackups": false,
        "DeletionProtection": true,
        "Engine": "postgres",
        "EngineVersion": "13",
        "MasterUserPassword": "{{resolve:ssm-secure:/TEST/flexible/typerighter-rule-manager/db.default.password:1}}",
        "MasterUsername": {
          "Ref": "MasterDBUsername",
        },
        "MultiAZ": false,
        "Port": "5432",
        "PreferredMaintenanceWindow": "Mon:06:30-Mon:07:00",
        "PubliclyAccessible": false,
        "StorageEncrypted": true,
        "StorageType": "gp2",
        "Tags": [
          {
            "Key": "App",
            "Value": "rule-manager-db",
          },
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "DBSecurityGroupTyperighterrulemanagerE0229216",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "SsmSshPolicy4CFC977E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-ssh-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleTyperightercheckerEA6224AC",
          },
          {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupTyperighterchecker7E7859CF": {
      "Properties": {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-checker",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "TargetGroupTyperighterrulemanager5D2DA3B8": {
      "Properties": {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "WazuhSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "WazuhSecurityGroupfromtyperighterLoadBalancerTyperightercheckerSecurityGroup6083F06D90004F90B093": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerTyperightercheckerSecurityGroup35C23EF5",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "WazuhSecurityGroupfromtyperighterLoadBalancerTyperighterrulemanagerSecurityGroupCB1A584E9000AF0F78BA": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerTyperighterrulemanagerSecurityGroupA732DDB7",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "WazuhSecurityGrouptotyperighterDBSecurityGroupTyperighterrulemanager6085BB9A54328A9B262B": {
      "Properties": {
        "Description": "Allow connection from EC2 instances to DB",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "DBSecurityGroupTyperighterrulemanagerE0229216",
            "GroupId",
          ],
        },
        "FromPort": 5432,
        "GroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 5432,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "checkerdnsrecords": {
      "Properties": {
        "Name": "checker.test.dev-gutools.co.uk",
        "RecordType": "CNAME",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "typerightercloudfront0384F783",
              "DomainName",
            ],
          },
        ],
        "Stage": "TEST",
        "TTL": 3600,
      },
      "Type": "Guardian::DNS::RecordSet",
    },
    "cloudfrontbucketTyperighterrulemanagerD085D5AD": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LifecycleConfiguration": {
          "Rules": [
            {
              "ExpirationInDays": 90,
              "Status": "Enabled",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "flexibleTESTtyperightercheckerC54CB6AC": {
      "DependsOn": [
        "InstanceRoleTyperightercheckerDefaultPolicyAC356146",
        "InstanceRoleTyperightercheckerEA6224AC",
      ],
      "Properties": {
        "LaunchTemplateData": {
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "flexibleTESTtyperightercheckerProfile8358872C",
                "Arn",
              ],
            },
          },
          "ImageId": {
            "Ref": "AMITyperighterchecker",
          },
          "InstanceType": "t4g.small",
          "MetadataOptions": {
            "HttpTokens": "required",
          },
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "GuHttpsEgressSecurityGroupTyperighterchecker43707E0C",
                "GroupId",
              ],
            },
            {
              "Fn::GetAtt": [
                "WazuhSecurityGroup",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "App",
                  "Value": "typerighter-checker",
                },
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/typerighter",
                },
                {
                  "Key": "Name",
                  "Value": "typerighter/flexible-TEST-typerighter-checker",
                },
                {
                  "Key": "Stack",
                  "Value": "flexible",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "App",
                  "Value": "typerighter-checker",
                },
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/typerighter",
                },
                {
                  "Key": "Name",
                  "Value": "typerighter/flexible-TEST-typerighter-checker",
                },
                {
                  "Key": "Stack",
                  "Value": "flexible",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash -ev
mkdir /etc/gu

cat > /etc/gu/tags << 'EOF'
Stage=TEST
Stack=flexible
App=typerighter-checker
EOF

cat > /etc/gu/typerighter-checker.conf << 'EOF'
include "application"
typerighter.ngramPath="/opt/ngram-data"
EOF

aws --quiet --region ",
                  {
                    "Ref": "AWS::Region",
                  },
                  " s3 cp s3://composer-dist/flexible/TEST/typerighter-checker/typerighter-checker.deb /tmp/package.deb
dpkg -i /tmp/package.deb

chown typerighter-checker /usr/share/typerighter-checker/conf/resources/dictionary",
                ],
              ],
            },
          },
        },
        "TagSpecifications": [
          {
            "ResourceType": "launch-template",
            "Tags": [
              {
                "Key": "App",
                "Value": "typerighter-checker",
              },
              {
                "Key": "gu:cdk:version",
                "Value": "TEST",
              },
              {
                "Key": "gu:repo",
                "Value": "guardian/typerighter",
              },
              {
                "Key": "Name",
                "Value": "typerighter/flexible-TEST-typerighter-checker",
              },
              {
                "Key": "Stack",
                "Value": "flexible",
              },
              {
                "Key": "Stage",
                "Value": "TEST",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "flexibleTESTtyperightercheckerProfile8358872C": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRoleTyperightercheckerEA6224AC",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "flexibleTESTtyperighterrulemanager4AFD32A8": {
      "DependsOn": [
        "InstanceRoleTyperighterrulemanagerDefaultPolicy29F250C4",
        "InstanceRoleTyperighterrulemanagerC4CF9347",
      ],
      "Properties": {
        "LaunchTemplateData": {
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "flexibleTESTtyperighterrulemanagerProfileBB9AFDE7",
                "Arn",
              ],
            },
          },
          "ImageId": {
            "Ref": "AMITyperighterrulemanager",
          },
          "InstanceType": "t4g.small",
          "MetadataOptions": {
            "HttpTokens": "required",
          },
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "GuHttpsEgressSecurityGroupTyperighterrulemanagerD8331A62",
                "GroupId",
              ],
            },
            {
              "Fn::GetAtt": [
                "WazuhSecurityGroup",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "App",
                  "Value": "typerighter-rule-manager",
                },
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/typerighter",
                },
                {
                  "Key": "Name",
                  "Value": "typerighter/flexible-TEST-typerighter-rule-manager",
                },
                {
                  "Key": "Stack",
                  "Value": "flexible",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "App",
                  "Value": "typerighter-rule-manager",
                },
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/typerighter",
                },
                {
                  "Key": "Name",
                  "Value": "typerighter/flexible-TEST-typerighter-rule-manager",
                },
                {
                  "Key": "Stack",
                  "Value": "flexible",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash -ev
        aws --quiet --region ",
                  {
                    "Ref": "AWS::Region",
                  },
                  " s3 cp s3://composer-dist/flexible/TEST/typerighter-rule-manager/typerighter-rule-manager.deb /tmp/package.deb
        dpkg -i /tmp/package.deb

        mkdir /etc/gu
cat > /etc/gu/typerighter-rule-manager.conf << 'EOF'
typerighter.checkerServiceUrl = "https://checker.test.dev-gutools.co.uk"
EOF
        ",
                ],
              ],
            },
          },
        },
        "TagSpecifications": [
          {
            "ResourceType": "launch-template",
            "Tags": [
              {
                "Key": "App",
                "Value": "typerighter-rule-manager",
              },
              {
                "Key": "gu:cdk:version",
                "Value": "TEST",
              },
              {
                "Key": "gu:repo",
                "Value": "guardian/typerighter",
              },
              {
                "Key": "Name",
                "Value": "typerighter/flexible-TEST-typerighter-rule-manager",
              },
              {
                "Key": "Stack",
                "Value": "flexible",
              },
              {
                "Key": "Stage",
                "Value": "TEST",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "flexibleTESTtyperighterrulemanagerProfileBB9AFDE7": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRoleTyperighterrulemanagerC4CF9347",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "hmacSecretF1CD03D9": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "Shared secret for HMAC-based communication between manager and checker services",
        "GenerateSecretString": {},
        "Name": "/TEST/flexible/typerighter/hmacSecretKey",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "managerdnsrecords": {
      "Properties": {
        "Name": "manager.test.dev-gutools.co.uk",
        "RecordType": "CNAME",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "LoadBalancerTyperighterrulemanager088CCBBF",
              "DNSName",
            ],
          },
        ],
        "Stage": "TEST",
        "TTL": 3600,
      },
      "Type": "Guardian::DNS::RecordSet",
    },
    "ruleprovisioneralarm77B679CD": {
      "Properties": {
        "AlarmDescription": "There was a problem getting rules for Typerighter. Rules might not be present, or might be out of date.",
        "AlarmName": "Typerighter - TEST - issue provisioning rules",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 3,
        "MetricName": "RulesNotFound",
        "Namespace": "Typerighter",
        "Period": 3600,
        "Statistic": "Sum",
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "typerighterbucketTyperighterrulemanager54EC2AB2": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketName": "typerighter-app-test",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-rule-manager",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "typerightercloudfront0384F783": {
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "checker.test.dev-gutools.co.uk",
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
            "TargetOriginId": "typerightertyperightercloudfrontOrigin1DFFB56FA",
            "ViewerProtocolPolicy": "allow-all",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": {
            "Bucket": {
              "Fn::GetAtt": [
                "cloudfrontbucketTyperighterrulemanagerD085D5AD",
                "RegionalDomainName",
              ],
            },
          },
          "Origins": [
            {
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "TLSv1.2",
                ],
              },
              "DomainName": {
                "Fn::GetAtt": [
                  "LoadBalancerTyperighterchecker8B160CE2",
                  "DNSName",
                ],
              },
              "Id": "typerightertyperightercloudfrontOrigin1DFFB56FA",
            },
          ],
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Ref": "CheckerCloudfrontCertificate",
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "typerighteruserfeedbacklambdaFEAAE469": {
      "DependsOn": [
        "typerighteruserfeedbacklambdaServiceRoleDefaultPolicy65A32517",
        "typerighteruserfeedbacklambdaServiceRoleA475B322",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "flexible/TEST/typerighter-user-feedback/typerighter-user-feedback.jar",
        },
        "Description": "The front door for user feedback",
        "Environment": {
          "Variables": {
            "APP": "typerighter-user-feedback",
            "STACK": "flexible",
            "STAGE": "TEST",
          },
        },
        "FunctionName": "typerighter-user-feedback-TEST",
        "Handler": "Handler",
        "LoggingConfig": {
          "LogFormat": "JSON",
        },
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "typerighteruserfeedbacklambdaServiceRoleA475B322",
            "Arn",
          ],
        },
        "Runtime": "java11",
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-user-feedback",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "typerighteruserfeedbacklambdaServiceRoleA475B322": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-user-feedback",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "typerighteruserfeedbacklambdaServiceRoleDefaultPolicy65A32517": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DistributionBucketName",
                      },
                      "/flexible/TEST/typerighter-user-feedback/typerighter-user-feedback.jar",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/flexible/typerighter-user-feedback",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/flexible/typerighter-user-feedback/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "typerighteruserfeedbacklambdaServiceRoleDefaultPolicy65A32517",
        "Roles": [
          {
            "Ref": "typerighteruserfeedbacklambdaServiceRoleA475B322",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03": {
      "Properties": {
        "Name": "flexible-TEST-typerighter-user-feedback-api",
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-user-feedback",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "typerighteruserfeedbacklambdatyperighteruserfeedbackapiANY20EA5B9F": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "typerighteruserfeedbacklambdaFEAAE469",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "typerighteruserfeedbacklambdatyperighteruserfeedbackapiANYApiPermissionTesttyperightertyperighteruserfeedbacklambdatyperighteruserfeedbackapiA33CFE45ANY9F50A242": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "typerighteruserfeedbacklambdaFEAAE469",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "typerighteruserfeedbacklambdatyperighteruserfeedbackapiANYApiPermissiontyperightertyperighteruserfeedbacklambdatyperighteruserfeedbackapiA33CFE45ANY4C414FF7": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "typerighteruserfeedbacklambdaFEAAE469",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03",
              },
              "/",
              {
                "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapiDeploymentStageprod397C05AA",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "typerighteruserfeedbacklambdatyperighteruserfeedbackapiAccount05FF64C5": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "typerighteruserfeedbacklambdatyperighteruserfeedbackapiCloudWatchRole92D2BA4D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "typerighteruserfeedbacklambdatyperighteruserfeedbackapiCloudWatchRole92D2BA4D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-user-feedback",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "typerighteruserfeedbacklambdatyperighteruserfeedbackapiDeploymentB4B2CEAD34349149518f0edda527a70483cb8f7b": {
      "DependsOn": [
        "typerighteruserfeedbacklambdatyperighteruserfeedbackapiproxyANYC1ED9C55",
        "typerighteruserfeedbacklambdatyperighteruserfeedbackapiproxyFC9587DD",
        "typerighteruserfeedbacklambdatyperighteruserfeedbackapiANY20EA5B9F",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "typerighteruserfeedbacklambdatyperighteruserfeedbackapiDeploymentStageprod397C05AA": {
      "DependsOn": [
        "typerighteruserfeedbacklambdatyperighteruserfeedbackapiAccount05FF64C5",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapiDeploymentB4B2CEAD34349149518f0edda527a70483cb8f7b",
        },
        "RestApiId": {
          "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03",
        },
        "StageName": "prod",
        "Tags": [
          {
            "Key": "App",
            "Value": "typerighter-user-feedback",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/typerighter",
          },
          {
            "Key": "Stack",
            "Value": "flexible",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "typerighteruserfeedbacklambdatyperighteruserfeedbackapiproxyANYApiPermissionTesttyperightertyperighteruserfeedbacklambdatyperighteruserfeedbackapiA33CFE45ANYproxyAAEFE402": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "typerighteruserfeedbacklambdaFEAAE469",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "typerighteruserfeedbacklambdatyperighteruserfeedbackapiproxyANYApiPermissiontyperightertyperighteruserfeedbacklambdatyperighteruserfeedbackapiA33CFE45ANYproxyE132827A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "typerighteruserfeedbacklambdaFEAAE469",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03",
              },
              "/",
              {
                "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapiDeploymentStageprod397C05AA",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "typerighteruserfeedbacklambdatyperighteruserfeedbackapiproxyANYC1ED9C55": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "typerighteruserfeedbacklambdaFEAAE469",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapiproxyFC9587DD",
        },
        "RestApiId": {
          "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "typerighteruserfeedbacklambdatyperighteruserfeedbackapiproxyFC9587DD": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "typerighteruserfeedbacklambdatyperighteruserfeedbackapi2D58AA03",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
  },
}
`;
